<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>springboot 生成二维码或者加带有图片log的二维码</title>
      <link href="2020/10/11/springboot%20%E7%94%9F%E6%88%90%E4%BA%8C%E7%BB%B4%E7%A0%81%E6%88%96%E8%80%85%E5%8A%A0%E5%B8%A6%E6%9C%89%E5%9B%BE%E7%89%87log%E7%9A%84%E4%BA%8C%E7%BB%B4%E7%A0%81/"/>
      <url>2020/10/11/springboot%20%E7%94%9F%E6%88%90%E4%BA%8C%E7%BB%B4%E7%A0%81%E6%88%96%E8%80%85%E5%8A%A0%E5%B8%A6%E6%9C%89%E5%9B%BE%E7%89%87log%E7%9A%84%E4%BA%8C%E7%BB%B4%E7%A0%81/</url>
      
        <content type="html"><![CDATA[<blockquote><p>这一篇文章是针对上一篇给图片加二维码的一个完善（或者叫升级？），实现生成二维码以及生成带有log图片的二维码，这样我们就可以把自己骚气的头像加在二维码上面</p></blockquote><blockquote><p>首先是引入依赖，gradle是引入下面这两个，maven引入自行搜索</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">compile(<span class="string">&quot;com.google.zxing:core:3.4.0&quot;</span>)</span><br><span class="line">compile(<span class="string">&quot;com.google.zxing:javase:3.4.0&quot;</span>)</span><br></pre></td></tr></table></figure><blockquote><p>然后进入正文，首先创建一个生成二维码的工具类  QRCodeUtil</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.wzp.config;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> com.google.zxing.BarcodeFormat;</span><br><span class="line"><span class="keyword">import</span> com.google.zxing.EncodeHintType;</span><br><span class="line"><span class="keyword">import</span> com.google.zxing.MultiFormatWriter;</span><br><span class="line"><span class="keyword">import</span> com.google.zxing.common.BitMatrix;</span><br><span class="line"><span class="keyword">import</span> com.google.zxing.qrcode.decoder.ErrorCorrectionLevel;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> javax.imageio.ImageIO;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.geom.RoundRectangle2D;</span><br><span class="line"><span class="keyword">import</span> java.awt.image.BufferedImage;</span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.OutputStream;</span><br><span class="line"><span class="keyword">import</span> java.util.Hashtable;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 生成二维码的工具类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">QRCodeUtil</span> </span>&#123;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String CHARSET = <span class="string">&quot;utf-8&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String FORMAT_NAME = <span class="string">&quot;JPG&quot;</span>;</span><br><span class="line">    <span class="comment">// 二维码尺寸</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> QRCODE_SIZE = <span class="number">300</span>;</span><br><span class="line">    <span class="comment">// LOGO宽度</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> WIDTH = <span class="number">60</span>;</span><br><span class="line">    <span class="comment">// LOGO高度</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> HEIGHT = <span class="number">60</span>;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> BufferedImage <span class="title">createImage</span><span class="params">(String content, String imgPath, <span class="keyword">boolean</span> needCompress)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        Hashtable hints = <span class="keyword">new</span> Hashtable();</span><br><span class="line">        hints.put(EncodeHintType.ERROR_CORRECTION, ErrorCorrectionLevel.H);</span><br><span class="line">        hints.put(EncodeHintType.CHARACTER_SET, CHARSET);</span><br><span class="line">        hints.put(EncodeHintType.MARGIN, <span class="number">1</span>);</span><br><span class="line">        BitMatrix bitMatrix = <span class="keyword">new</span> MultiFormatWriter().encode(content, BarcodeFormat.QR_CODE, QRCODE_SIZE, QRCODE_SIZE,hints);</span><br><span class="line">        <span class="keyword">int</span> width = bitMatrix.getWidth();</span><br><span class="line">        <span class="keyword">int</span> height = bitMatrix.getHeight();</span><br><span class="line">        BufferedImage image = <span class="keyword">new</span> BufferedImage(width, height, BufferedImage.TYPE_INT_RGB);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> x = <span class="number">0</span>; x &lt; width; x++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> y = <span class="number">0</span>; y &lt; height; y++) &#123;</span><br><span class="line">                image.setRGB(x, y, bitMatrix.get(x, y) ? <span class="number">0xFF000000</span> : <span class="number">0xFFFFFFFF</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (imgPath == <span class="keyword">null</span> || <span class="string">&quot;&quot;</span>.equals(imgPath)) &#123;</span><br><span class="line">            <span class="keyword">return</span> image;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 插入图片</span></span><br><span class="line">        QRCodeUtil.insertImage(image, imgPath, needCompress);</span><br><span class="line">        <span class="keyword">return</span> image;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">insertImage</span><span class="params">(BufferedImage source, String imgPath, <span class="keyword">boolean</span> needCompress)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        File file = <span class="keyword">new</span> File(imgPath);</span><br><span class="line">        <span class="keyword">if</span> (!file.exists()) &#123;</span><br><span class="line">            System.err.println(<span class="string">&quot;&quot;</span> + imgPath + <span class="string">&quot;该文件不存在！&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        Image src = ImageIO.read(<span class="keyword">new</span> File(imgPath));</span><br><span class="line">        <span class="keyword">int</span> width = src.getWidth(<span class="keyword">null</span>);</span><br><span class="line">        <span class="keyword">int</span> height = src.getHeight(<span class="keyword">null</span>);</span><br><span class="line">        <span class="keyword">if</span> (needCompress) &#123; <span class="comment">// 压缩LOGO</span></span><br><span class="line">            <span class="keyword">if</span> (width &gt; WIDTH) &#123;</span><br><span class="line">                width = WIDTH;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (height &gt; HEIGHT) &#123;</span><br><span class="line">                height = HEIGHT;</span><br><span class="line">            &#125;</span><br><span class="line">            Image image = src.getScaledInstance(width, height, Image.SCALE_SMOOTH);</span><br><span class="line">            BufferedImage tag = <span class="keyword">new</span> BufferedImage(width, height, BufferedImage.TYPE_INT_RGB);</span><br><span class="line">            Graphics g = tag.getGraphics();</span><br><span class="line">            g.drawImage(image, <span class="number">0</span>, <span class="number">0</span>, <span class="keyword">null</span>); <span class="comment">// 绘制缩小后的图</span></span><br><span class="line">            g.dispose();</span><br><span class="line">            src = image;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 插入LOGO</span></span><br><span class="line">        Graphics2D graph = source.createGraphics();</span><br><span class="line">        <span class="keyword">int</span> x = (QRCODE_SIZE - width) / <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">int</span> y = (QRCODE_SIZE - height) / <span class="number">2</span>;</span><br><span class="line">        graph.drawImage(src, x, y, width, height, <span class="keyword">null</span>);</span><br><span class="line">        Shape shape = <span class="keyword">new</span> RoundRectangle2D.Float(x, y, width, width, <span class="number">6</span>, <span class="number">6</span>);</span><br><span class="line">        graph.setStroke(<span class="keyword">new</span> BasicStroke(<span class="number">3f</span>));</span><br><span class="line">        graph.draw(shape);</span><br><span class="line">        graph.dispose();</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">encode</span><span class="params">(String content, String imgPath, String destPath, <span class="keyword">boolean</span> needCompress)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        BufferedImage image = QRCodeUtil.createImage(content, imgPath, needCompress);</span><br><span class="line">        mkdirs(destPath);</span><br><span class="line">        ImageIO.write(image, FORMAT_NAME, <span class="keyword">new</span> File(destPath));</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> BufferedImage <span class="title">encode</span><span class="params">(String content, String imgPath, <span class="keyword">boolean</span> needCompress)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        BufferedImage image = QRCodeUtil.createImage(content, imgPath, needCompress);</span><br><span class="line">        <span class="keyword">return</span> image;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">mkdirs</span><span class="params">(String destPath)</span> </span>&#123;</span><br><span class="line">        File file = <span class="keyword">new</span> File(destPath);</span><br><span class="line">        <span class="comment">// 当文件夹不存在时，mkdirs会自动创建多层目录，区别于mkdir．(mkdir如果父目录不存在则会抛出异常)</span></span><br><span class="line">        <span class="keyword">if</span> (!file.exists() &amp;&amp; !file.isDirectory()) &#123;</span><br><span class="line">            file.mkdirs();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">encode</span><span class="params">(String content, String imgPath, OutputStream output, <span class="keyword">boolean</span> needCompress)</span></span></span><br><span class="line"><span class="function">            <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        BufferedImage image = QRCodeUtil.createImage(content, imgPath, needCompress);</span><br><span class="line">        ImageIO.write(image, FORMAT_NAME, output);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">encode</span><span class="params">(String content, OutputStream output)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        QRCodeUtil.encode(content, <span class="keyword">null</span>, output, <span class="keyword">false</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>二、创建两个controller，一个是用来生成”单纯”的二维码，一个是带有骚气图片的二维码</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 根据数据生成二维码</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@GetMapping(&quot;QrCode&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">QrCode</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">    ServletOutputStream stream = <span class="keyword">null</span>;</span><br><span class="line">    String code = request.getParameter(<span class="string">&quot;code&quot;</span>);</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        stream = response.getOutputStream();</span><br><span class="line">        <span class="comment">//使用工具类生成二维码</span></span><br><span class="line">        QRCodeUtil.encode(code, stream);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">        e.getStackTrace();</span><br><span class="line">    &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (stream != <span class="keyword">null</span>) &#123;</span><br><span class="line">            stream.flush();</span><br><span class="line">            stream.close();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 根据数据生成带有logo二维码</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@GetMapping(value = &quot;/createLogoQrCode&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">createLogoQRCode</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">    ServletOutputStream stream = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        stream = response.getOutputStream();</span><br><span class="line">        String logoPath = <span class="string">&quot;F://logo.jpg&quot;</span>;</span><br><span class="line">        <span class="comment">//使用工具类生成二维码</span></span><br><span class="line">        String code = request.getParameter(<span class="string">&quot;code&quot;</span>);</span><br><span class="line">        QRCodeUtil.encode(code, logoPath, stream, <span class="keyword">true</span>);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">        e.getStackTrace();</span><br><span class="line">    &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (stream != <span class="keyword">null</span>) &#123;</span><br><span class="line">            stream.flush();</span><br><span class="line">            stream.close();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>也可根据自己的需求进行相关改进</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> springboot </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 二维码 </tag>
            
            <tag> springboot2.0 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>重置Studio 3T的试用时间</title>
      <link href="2020/10/11/%E9%87%8D%E7%BD%AEStudio%203T%E7%9A%84%E8%AF%95%E7%94%A8%E6%97%B6%E9%97%B4/"/>
      <url>2020/10/11/%E9%87%8D%E7%BD%AEStudio%203T%E7%9A%84%E8%AF%95%E7%94%A8%E6%97%B6%E9%97%B4/</url>
      
        <content type="html"><![CDATA[<blockquote><p>一般来说，我们会用到Studio 3T来操作mongodb数据库，但是呢，Studio 3T收钱啊，我们又不喜欢花钱买，只想白嫖，所以就只能想其它办法了，比如重置它的使用时间……当然了，还是建议自己掏钱买才是最正确的做法</p></blockquote><blockquote><p>那么怎么重置时间呢，<br>首先创建一个reset-studio-3t.bat 文件，并在文件中写入下面的内容</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@echo</span> off</span><br><span class="line">ECHO 重置Studio <span class="number">3</span>T的使用日期......</span><br><span class="line">FOR /f <span class="string">&quot;tokens=1,2,* &quot;</span> %%<span class="function">i <span class="title">IN</span> <span class="params">(<span class="string">&#x27;reg query &quot;HKEY_CURRENT_USER\Software\JavaSoft\Prefs\3t\mongochef\enterprise&quot; ^| find /V &quot;installation&quot; ^| find /V &quot;HKEY&quot;&#x27;</span>)</span> DO ECHO yes | reg add &quot;HKEY_CURRENT_USER\Software\JavaSoft\Prefs\3t\mongochef\enterprise&quot; /v %%i /t REG_SZ /d &quot;&quot;</span></span><br><span class="line"><span class="function">ECHO 重置完成, 按任意键退出......</span></span><br><span class="line"><span class="function">pause&gt;nul</span></span><br><span class="line"><span class="function">exit</span></span><br></pre></td></tr></table></figure><blockquote><p>最后，在每次要使用它的时候双击运行就行了……</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> MongoDB </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MongoDB </tag>
            
            <tag> Studio3T </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>springboot 给图片加二维码</title>
      <link href="2020/10/04/springboot%20%E7%BB%99%E5%9B%BE%E7%89%87%E5%8A%A0%E4%BA%8C%E7%BB%B4%E7%A0%81/"/>
      <url>2020/10/04/springboot%20%E7%BB%99%E5%9B%BE%E7%89%87%E5%8A%A0%E4%BA%8C%E7%BB%B4%E7%A0%81/</url>
      
        <content type="html"><![CDATA[<blockquote><p>springboot的功能逐渐强大，除了可以给图片加水印以外，还能给图片加上二维码，支持私人订制，哈哈哈哈，废话不多说，直接上代码</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@PostMapping(&quot;/watermarkImages&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">watermarkImages</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">    <span class="comment">//获取原始图片文件</span></span><br><span class="line">    String srcImgPath = <span class="string">&quot;F://bg1.png&quot;</span>;</span><br><span class="line">    String fileNameType = srcImgPath.substring(srcImgPath.lastIndexOf(<span class="string">&quot;.&quot;</span>), srcImgPath.length());</span><br><span class="line">    String tarImgPath = CustomConfig.diskLocation + System.currentTimeMillis() + fileNameType; <span class="comment">//待存储的地址</span></span><br><span class="line">    addWaterMark(srcImgPath, tarImgPath);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;success&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/***</span></span><br><span class="line"><span class="comment"> * 在一张背景图上添加二维码</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> bigImgPath 背景图的路径</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> outPathWithFileName 输出路径</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addWaterMark</span><span class="params">(String bigImgPath, String outPathWithFileName)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">    <span class="comment">// 读取原图片信息</span></span><br><span class="line">    File srcImgFile = <span class="keyword">new</span> File(bigImgPath);<span class="comment">//得到文件</span></span><br><span class="line">    Image srcImg = ImageIO.read(srcImgFile);<span class="comment">//文件转化为图片</span></span><br><span class="line">    <span class="keyword">int</span> srcImgWidth = srcImg.getWidth(<span class="keyword">null</span>);<span class="comment">//获取图片的宽</span></span><br><span class="line">    <span class="keyword">int</span> srcImgHeight = srcImg.getHeight(<span class="keyword">null</span>);<span class="comment">//获取图片的高</span></span><br><span class="line">    <span class="comment">// 加水印</span></span><br><span class="line">    BufferedImage bufImg = <span class="keyword">new</span> BufferedImage(srcImgWidth, srcImgHeight, BufferedImage.TYPE_INT_RGB);</span><br><span class="line">    Graphics2D g = bufImg.createGraphics();</span><br><span class="line">    g.drawImage(srcImg, <span class="number">0</span>, <span class="number">0</span>, srcImgWidth, srcImgHeight, <span class="keyword">null</span>);</span><br><span class="line">    String content = <span class="string">&quot;时光蹉跎看淡岁月你我&quot;</span>;</span><br><span class="line">    <span class="comment">//使用工具类生成二维码</span></span><br><span class="line">    Image image = QRCodeUtil.createImages(content);</span><br><span class="line">    <span class="comment">//将小图片绘到大图片上,500,300 .表示你的小图片在大图片上的位置。</span></span><br><span class="line">    g.drawImage(image, <span class="number">500</span>, <span class="number">500</span>, <span class="keyword">null</span>);</span><br><span class="line">    <span class="comment">//设置颜色。</span></span><br><span class="line">    g.setColor(Color.WHITE);</span><br><span class="line">    g.dispose();</span><br><span class="line">    <span class="comment">// 输出图片</span></span><br><span class="line">    FileOutputStream outImgStream = <span class="keyword">new</span> FileOutputStream(outPathWithFileName);</span><br><span class="line">    ImageIO.write(bufImg, <span class="string">&quot;png&quot;</span>, outImgStream);</span><br><span class="line">    System.out.println(<span class="string">&quot;添加水印完成&quot;</span>);</span><br><span class="line">    outImgStream.flush();</span><br><span class="line">    outImgStream.close();</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment">/***</span></span><br><span class="line"><span class="comment"> * 生成二维码</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> content 二维码里面的内容</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> BufferedImage <span class="title">createImages</span><span class="params">(String content)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">    Hashtable hints = <span class="keyword">new</span> Hashtable();</span><br><span class="line">    hints.put(EncodeHintType.ERROR_CORRECTION, ErrorCorrectionLevel.H);</span><br><span class="line">    hints.put(EncodeHintType.CHARACTER_SET, CHARSET);</span><br><span class="line">    hints.put(EncodeHintType.MARGIN, <span class="number">1</span>);</span><br><span class="line">    BitMatrix bitMatrix = <span class="keyword">new</span> MultiFormatWriter().encode(content, BarcodeFormat.QR_CODE, <span class="number">192</span>, <span class="number">192</span>, hints);</span><br><span class="line">    <span class="keyword">int</span> width = bitMatrix.getWidth();</span><br><span class="line">    <span class="keyword">int</span> height = bitMatrix.getHeight();</span><br><span class="line">    BufferedImage image = <span class="keyword">new</span> BufferedImage(width, height, BufferedImage.TYPE_INT_RGB);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> x = <span class="number">0</span>; x &lt; width; x++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> y = <span class="number">0</span>; y &lt; height; y++) &#123;</span><br><span class="line">            image.setRGB(x, y, bitMatrix.get(x, y) ? <span class="number">0xFF000000</span> : <span class="number">0xFFFFFFFF</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> image;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> springboot </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> springboot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>spring boot 使用外部字体给图片加水印</title>
      <link href="2020/10/04/spring%20boot%20%E4%BD%BF%E7%94%A8%E5%A4%96%E9%83%A8%E5%AD%97%E4%BD%93%E7%BB%99%E5%9B%BE%E7%89%87%E5%8A%A0%E6%B0%B4%E5%8D%B0/"/>
      <url>2020/10/04/spring%20boot%20%E4%BD%BF%E7%94%A8%E5%A4%96%E9%83%A8%E5%AD%97%E4%BD%93%E7%BB%99%E5%9B%BE%E7%89%87%E5%8A%A0%E6%B0%B4%E5%8D%B0/</url>
      
        <content type="html"><![CDATA[<blockquote><p>springboot除了能够使用系统自带的字体给图片加水印以外，还支持使用外部字体给图片加水印的，具体怎么做请看下面代码<br>这第一步当然是在网上下载一款字体啦，然后把下载的字体放在对应的文件位置，接下来就是代码了</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.demo;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> javax.imageio.ImageIO;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.image.BufferedImage;</span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"> </span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LoadFontController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/test&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test</span><span class="params">()</span> <span class="keyword">throws</span> IOException, FontFormatException </span>&#123;</span><br><span class="line">        File file = <span class="keyword">new</span> File(<span class="string">&quot;E://包图小白体.ttf&quot;</span>);</span><br><span class="line">        Font dynamicFont = Font.createFont(Font.TRUETYPE_FONT, file);</span><br><span class="line"><span class="comment">//      方法2引用外部字体有可能会失败不起作用，建议使用方法3</span></span><br><span class="line"><span class="comment">//        Font font = new Font(&quot;微软雅黑&quot;, Font.PLAIN, 35); //水印字体 方法1</span></span><br><span class="line"><span class="comment">//        Font font = new Font(dynamicFont.getName(), Font.PLAIN, 35); //水印字体 方法2</span></span><br><span class="line">        Font font = dynamicFont.deriveFont(Font.PLAIN, <span class="number">35</span>); <span class="comment">//水印字体 方法3</span></span><br><span class="line">        String srcImgPath = <span class="string">&quot;E://15.jpg&quot;</span>; <span class="comment">//源图片地址</span></span><br><span class="line">        String tarImgPath = <span class="string">&quot;E://&quot;</span> + System.currentTimeMillis() + <span class="string">&quot;.jpg&quot;</span>; <span class="comment">//待存储的地址</span></span><br><span class="line">        String waterMarkContent = <span class="string">&quot;时光蹉跎，看淡岁月你我&quot;</span>;  <span class="comment">//水印内容</span></span><br><span class="line">        Color color = <span class="keyword">new</span> Color(<span class="number">225</span>, <span class="number">225</span>, <span class="number">60</span>); <span class="comment">//水印图片色彩以及透明度</span></span><br><span class="line">        addWaterMark(srcImgPath, tarImgPath, waterMarkContent, color, font);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addWaterMark</span><span class="params">(String srcImgPath, String tarImgPath, Color markContentColor, String content, Font font)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line"> </span><br><span class="line">        <span class="comment">// 读取原图片信息</span></span><br><span class="line">        File srcImgFile = <span class="keyword">new</span> File(srcImgPath);<span class="comment">//得到文件</span></span><br><span class="line">        Image srcImg = ImageIO.read(srcImgFile);<span class="comment">//文件转化为图片</span></span><br><span class="line">        <span class="keyword">int</span> srcImgWidth = srcImg.getWidth(<span class="keyword">null</span>);<span class="comment">//获取图片的宽</span></span><br><span class="line">        <span class="keyword">int</span> srcImgHeight = srcImg.getHeight(<span class="keyword">null</span>);<span class="comment">//获取图片的高</span></span><br><span class="line">        <span class="comment">// 加水印</span></span><br><span class="line">        BufferedImage bufImg = <span class="keyword">new</span> BufferedImage(srcImgWidth, srcImgHeight, BufferedImage.TYPE_INT_RGB);</span><br><span class="line">        Graphics2D g = bufImg.createGraphics();</span><br><span class="line">        g.drawImage(srcImg, <span class="number">0</span>, <span class="number">0</span>, srcImgWidth, srcImgHeight, <span class="keyword">null</span>);</span><br><span class="line">        g.setColor(markContentColor); <span class="comment">//根据图片的背景设置水印颜色</span></span><br><span class="line">        g.setFont(font);  <span class="comment">//设置字体</span></span><br><span class="line">        <span class="comment">//设置水印的坐标 如果水印长度超过图片宽度则换行</span></span><br><span class="line">        <span class="keyword">int</span> fontLen = getWatermarkLength(content, g); <span class="comment">// 水印文字总长度</span></span><br><span class="line">        <span class="keyword">int</span> line = fontLen / srcImgWidth;<span class="comment">//文字长度相对于图片宽度应该有多少行</span></span><br><span class="line">        <span class="keyword">int</span> y = (line + <span class="number">1</span>) * font.getSize();</span><br><span class="line">        System.out.println(<span class="string">&quot;水印文字总长度:&quot;</span> + fontLen + <span class="string">&quot;,图片宽度:&quot;</span> + srcImgWidth + <span class="string">&quot;,字符个数:&quot;</span> + content.length());</span><br><span class="line">        <span class="comment">//文字叠加,自动换行叠加</span></span><br><span class="line">        <span class="keyword">int</span> tempX = <span class="number">50</span>; <span class="comment">// 文字初始x坐标位置</span></span><br><span class="line">        <span class="keyword">int</span> tempY = y;  <span class="comment">// 文字初始y坐标位置</span></span><br><span class="line">        <span class="keyword">int</span> tempCharLen;<span class="comment">//单字符长度</span></span><br><span class="line">        <span class="keyword">int</span> tempLineLen = <span class="number">0</span>;<span class="comment">//单行字符总长度临时计算</span></span><br><span class="line">        StringBuffer sb = <span class="keyword">new</span> StringBuffer();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; content.length(); i++) &#123;</span><br><span class="line">            <span class="keyword">char</span> tempChar = content.charAt(i);</span><br><span class="line">            tempCharLen = getCharLen(tempChar, g);</span><br><span class="line">            tempLineLen += tempCharLen;</span><br><span class="line">            <span class="keyword">if</span> (tempLineLen &gt;= srcImgWidth - <span class="number">70</span>) &#123;</span><br><span class="line">                <span class="comment">//长度已经满一行,进行文字叠加</span></span><br><span class="line">                g.drawString(sb.toString(), tempX, tempY);</span><br><span class="line">                sb.delete(<span class="number">0</span>, sb.length());<span class="comment">//清空内容,重新追加</span></span><br><span class="line">                tempY += font.getSize();</span><br><span class="line">                tempLineLen = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            sb.append(tempChar);<span class="comment">//追加字符</span></span><br><span class="line">        &#125;</span><br><span class="line">        g.drawString(sb.toString(), tempX, tempY);<span class="comment">//最后叠加余下的文字</span></span><br><span class="line">        g.dispose();</span><br><span class="line">        <span class="comment">// 输出图片</span></span><br><span class="line">        FileOutputStream outImgStream = <span class="keyword">new</span> FileOutputStream(tarImgPath);</span><br><span class="line">        ImageIO.write(bufImg, <span class="string">&quot;jpg&quot;</span>, outImgStream);</span><br><span class="line">        System.out.println(<span class="string">&quot;添加水印完成&quot;</span>);</span><br><span class="line">        outImgStream.flush();</span><br><span class="line">        outImgStream.close();</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取水印文字总长度</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> waterMarkContent</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> g</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getWatermarkLength</span><span class="params">(String waterMarkContent, Graphics2D g)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> g.getFontMetrics(g.getFont()).charsWidth(waterMarkContent.toCharArray(), <span class="number">0</span>, waterMarkContent.length());</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取水印对应文字的位置</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> c</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> g</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getCharLen</span><span class="params">(<span class="keyword">char</span> c, Graphics2D g)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> g.getFontMetrics(g.getFont()).charWidth(c);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>经过本人亲测，妥妥的，附上一个获取计算文字占的像素长度方法</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//计算文字占的像素长度</span></span><br><span class="line"><span class="keyword">int</span> sw = getSw(dynamicFont, content, fontSize);</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">int</span> <span class="title">getSw</span><span class="params">(Font dynamicFont, String content, <span class="keyword">int</span> fontSize)</span> </span>&#123;</span><br><span class="line">        FontMetrics fm = FontDesignMetrics.getMetrics(dynamicFont.deriveFont(Font.PLAIN, fontSize));</span><br><span class="line">        <span class="keyword">return</span> fm.stringWidth(content);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> springboot </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> springboot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>西安游记</title>
      <link href="2020/09/29/%E8%A5%BF%E5%AE%89%E6%B8%B8%E8%AE%B0/"/>
      <url>2020/09/29/%E8%A5%BF%E5%AE%89%E6%B8%B8%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<p><img src= "/img/loading.gif" data-lazy-src="/img/lvyou/IMG_20200925_151647.jpg" alt="Alt text"><br><strong>第一天</strong><br>    酒店订在钟楼附近，主要是出行方便，到达西安后，可以先去酒店放置行李，然后出来逛逛旁边的钟楼和鼓楼，顺道去逛逛回民街，然后有兴趣的可以去城墙，门票54块钱，城墙上面提供自行车，单人座的45块钱3个小时，双人座的90块钱3个小时，如果是一个人的话，城墙就没必要去了，毕竟一个人还是有些无聊（亲身体验，无聊至极），两人及其以上的话可以上去走一段或者租自行车骑行，然后看个人意愿在哪个门下，然后骑个共享自行车二十分钟左右就可以回到回民街，几条街吃的喝的都有（顺便解决晚饭），逛三个小时以上完全不是问题。</p><p><img src= "/img/loading.gif" data-lazy-src="/img/lvyou/IMG_20200925_191002.jpg" alt="Alt text"><br><strong>第二天</strong><br>    可以选择步行至北大街地铁口（因为顺道解决早饭），乘坐一号线，坐到终点站纺织城，然后从D口出去，就到公交站了，坐游（5）306路线，车费五块钱到兵马俑（吐槽一句，该线路公交只收现金，个人备好，考虑到回来还要去华清宫，所以备十块的零钱）然后到了兵马俑以后，自行导航到售票厅，扫描小程序进行购票，门票120大洋，然后进去以后拼团找一个讲解，一个人二十块（没得讲解，真的只能走马观花，除非你的历史很好）然后时间大概是两个小时，出来后，跟着大部队去吃午饭，然后坐游（5）306路往回坐到华清宫（有索道可到山顶，然后从山顶逛下来，也可以自行上山，下山），门票也是120，进去后可以到处看看，拍拍照，顺道看一下西安事变的相关，蹭一下别人的解说，听一下，哈哈哈哈，然后有兴趣你可以留在晚上看长恨歌表演（这个要单独买票，好像是三百多），然后表演完了以后只能打车回市区啦，因为公交末班车是七点。</p><p><img src= "/img/loading.gif" data-lazy-src="/img/lvyou/IMG_20200926_123156.jpg" alt="Alt text"><br><strong>第三天</strong><br>    早上可以到回民街吃个早饭，然后坐公交或者地铁到陕西历史博物馆（提前一周预约，免费的，不然真的预约不到啊）然后可以花三十块钱买一张大唐遗址陈列馆（好像是这个名字？忘了，不过不重要）的票，可以逛一二三四厅，这个就不要找讲解了，因为讲解是流水线操作，自己逛逛看看就好了，大概能够逛个三个小时左右。然后出来坐公交（自行高德导航）到永乐坊，买点吃的喝的边吃边逛，大概一到两个小时就够了，然后到大雁塔，门票40，有兴趣可以花钱买一张上塔的票（25块钱），可以到大雁塔上一观风景，晚上逛一下大唐不夜城，也是逛吃逛吃逛吃，慢悠悠的差不多能逛三四个小时。</p><p><img src= "/img/loading.gif" data-lazy-src="/img/lvyou/IMG_20200927_123904.jpg" alt="Alt text"><br><strong>第四天</strong><br>    睡个懒觉，然后找个地方吃午饭，然后选择步行至北大街地铁口，乘坐1号线然后换乘4号线，在曲江池下，可以逛一下这个公园，还是挺大的，中午自己随便吃点，下午就可以去大唐芙蓉园瞅瞅（公众号免费预约门票，不要钱的），可以租一艘船，在湖面上看看芙蓉园的风景，如果想看晚上的夜景，那就只能下午六七点再进去了（或者待在里面不出来，哈哈哈哈），出来顺道逛一下不夜城，找点吃的再回去。</p><p><img src= "/img/loading.gif" data-lazy-src="/img/lvyou/IMG_20200928_134831.jpg" alt="Alt text"><br><strong>第五天</strong><br>    上午去回民街逛逛，看看有没有啥可以买的，出来一趟还是要买点东西，然后吃了午饭以后，就可以去机场或者高铁站打道回府了</p><p><strong>友情提示</strong><br>    以上所有景区门票对医护人员均实行免票制度，且可以带一个直系家属</p>]]></content>
      
      
      <categories>
          
          <category> 旅游 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 旅游 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>java 登录验证码</title>
      <link href="2020/09/24/java%20%E7%99%BB%E5%BD%95%E9%AA%8C%E8%AF%81%E7%A0%81/"/>
      <url>2020/09/24/java%20%E7%99%BB%E5%BD%95%E9%AA%8C%E8%AF%81%E7%A0%81/</url>
      
        <content type="html"><![CDATA[<blockquote><p>验证码的应用在目前来说是很广泛的，主要用于登录的时候进行相关验证方面，验证码的生成可以在前端做，也能在后端做，然后传给前端进行相应的操作</p></blockquote><blockquote><p>一，先新建一个CodeUtil用于进行验证码的生成</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CodeUtil</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 验证码字符集</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">char</span>[] chars = &#123;</span><br><span class="line">            <span class="string">&#x27;0&#x27;</span>, <span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;2&#x27;</span>, <span class="string">&#x27;3&#x27;</span>, <span class="string">&#x27;4&#x27;</span>, <span class="string">&#x27;5&#x27;</span>, <span class="string">&#x27;6&#x27;</span>, <span class="string">&#x27;7&#x27;</span>, <span class="string">&#x27;8&#x27;</span>, <span class="string">&#x27;9&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;d&#x27;</span>, <span class="string">&#x27;e&#x27;</span>, <span class="string">&#x27;f&#x27;</span>, <span class="string">&#x27;g&#x27;</span>, <span class="string">&#x27;h&#x27;</span>, <span class="string">&#x27;i&#x27;</span>, <span class="string">&#x27;j&#x27;</span>, <span class="string">&#x27;k&#x27;</span>, <span class="string">&#x27;l&#x27;</span>, <span class="string">&#x27;m&#x27;</span>, <span class="string">&#x27;n&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;o&#x27;</span>, <span class="string">&#x27;p&#x27;</span>, <span class="string">&#x27;q&#x27;</span>, <span class="string">&#x27;r&#x27;</span>, <span class="string">&#x27;s&#x27;</span>, <span class="string">&#x27;t&#x27;</span>, <span class="string">&#x27;u&#x27;</span>, <span class="string">&#x27;v&#x27;</span>, <span class="string">&#x27;w&#x27;</span>, <span class="string">&#x27;x&#x27;</span>, <span class="string">&#x27;y&#x27;</span>, <span class="string">&#x27;z&#x27;</span>&#125;;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">// 字符数量</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> SIZE = <span class="number">4</span>;</span><br><span class="line">    <span class="comment">// 干扰线数量</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> LINES = <span class="number">5</span>;</span><br><span class="line">    <span class="comment">// 宽度</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> WIDTH = <span class="number">80</span>;</span><br><span class="line">    <span class="comment">// 高度</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> HEIGHT = <span class="number">40</span>;</span><br><span class="line">    <span class="comment">// 字体大小</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> FONT_SIZE = <span class="number">30</span>;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 生成随机验证码及图片</span></span><br><span class="line"><span class="comment">     * Object[0]：验证码字符串；</span></span><br><span class="line"><span class="comment">     * Object[1]：验证码图片。</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Object[] createImage() &#123;</span><br><span class="line">        StringBuffer sb = <span class="keyword">new</span> StringBuffer();</span><br><span class="line">        <span class="comment">// 1.创建空白图片</span></span><br><span class="line">        BufferedImage image = <span class="keyword">new</span> BufferedImage(</span><br><span class="line">                WIDTH, HEIGHT, BufferedImage.TYPE_INT_RGB);</span><br><span class="line">        <span class="comment">// 2.获取图片画笔</span></span><br><span class="line">        Graphics graphic = image.getGraphics();</span><br><span class="line">        <span class="comment">// 3.设置画笔颜色</span></span><br><span class="line">        graphic.setColor(Color.LIGHT_GRAY);</span><br><span class="line">        <span class="comment">// 4.绘制矩形背景</span></span><br><span class="line">        graphic.fillRect(<span class="number">0</span>, <span class="number">0</span>, WIDTH, HEIGHT);</span><br><span class="line">        <span class="comment">// 5.画随机字符</span></span><br><span class="line">        Random ran = <span class="keyword">new</span> Random();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;SIZE; i++) &#123;</span><br><span class="line">            <span class="comment">// 取随机字符索引</span></span><br><span class="line">            <span class="keyword">int</span> n = ran.nextInt(chars.length);</span><br><span class="line">            <span class="comment">// 设置随机颜色</span></span><br><span class="line">            graphic.setColor(getRandomColor());</span><br><span class="line">            <span class="comment">// 设置字体大小</span></span><br><span class="line">            graphic.setFont(<span class="keyword">new</span> Font(</span><br><span class="line">                    <span class="keyword">null</span>, Font.BOLD + Font.ITALIC, FONT_SIZE));</span><br><span class="line">            <span class="comment">// 画字符</span></span><br><span class="line">            graphic.drawString(</span><br><span class="line">                    chars[n] + <span class="string">&quot;&quot;</span>, i * WIDTH / SIZE, HEIGHT*<span class="number">2</span>/<span class="number">3</span>);</span><br><span class="line">            <span class="comment">// 记录字符</span></span><br><span class="line">            sb.append(chars[n]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 6.画干扰线</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; LINES; i++) &#123;</span><br><span class="line">            <span class="comment">// 设置随机颜色</span></span><br><span class="line">            graphic.setColor(getRandomColor());</span><br><span class="line">            <span class="comment">// 随机画线</span></span><br><span class="line">            graphic.drawLine(ran.nextInt(WIDTH), ran.nextInt(HEIGHT),</span><br><span class="line">                    ran.nextInt(WIDTH), ran.nextInt(HEIGHT));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 7.返回验证码和图片</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Object[]&#123;sb.toString(), image&#125;;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 随机取色</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Color <span class="title">getRandomColor</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        Random ran = <span class="keyword">new</span> Random();</span><br><span class="line">        Color color = <span class="keyword">new</span> Color(ran.nextInt(<span class="number">256</span>),</span><br><span class="line">                ran.nextInt(<span class="number">256</span>), ran.nextInt(<span class="number">256</span>));</span><br><span class="line">        <span class="keyword">return</span> color;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><blockquote><p>二、新建一个接口，用于获取我们上面生成的验证码</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取验证码</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/getCode&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Map <span class="title">getCode</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">//第一个参数是生成的验证码，第二个参数是生成的图片</span></span><br><span class="line">        Object[] objs = CodeUtil.createImage();</span><br><span class="line">        <span class="comment">//将生成的验证码发送到前端</span></span><br><span class="line">        String codes = (String) objs[<span class="number">0</span>];</span><br><span class="line">        <span class="comment">//将图片输出给浏览器</span></span><br><span class="line">        BufferedImage image = (BufferedImage) objs[<span class="number">1</span>];</span><br><span class="line">        ByteArrayOutputStream out = <span class="keyword">new</span> ByteArrayOutputStream();</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            ImageIO.write(image, <span class="string">&quot;png&quot;</span>, out);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line"><span class="comment">//            log.error(&quot;验证码错误:&quot; + e.getMessage());</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">byte</span>[] bytes = out.toByteArray();</span><br><span class="line">        Map&lt;String, Object&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        map.put(<span class="string">&quot;codes&quot;</span>, codes);</span><br><span class="line">        map.put(<span class="string">&quot;image&quot;</span>, bytes);</span><br><span class="line">        <span class="keyword">return</span> map;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><blockquote><p>三、由于是get请求，所以我们就直接用浏览器进行测试了，结果如下，返回的结果分别表示什么我就不再解释了</p></blockquote><p><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200920151930232.png#pic_center" alt="在这里插入图片描述"></p><blockquote><p>注：如有需要，可自行转载，但是要加上原创作者及原文章链接哦…</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> 登录验证码 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>java 获取图片相关数据</title>
      <link href="2020/09/24/java%20%E8%8E%B7%E5%8F%96%E5%9B%BE%E7%89%87%E7%9B%B8%E5%85%B3%E6%95%B0%E6%8D%AE/"/>
      <url>2020/09/24/java%20%E8%8E%B7%E5%8F%96%E5%9B%BE%E7%89%87%E7%9B%B8%E5%85%B3%E6%95%B0%E6%8D%AE/</url>
      
        <content type="html"><![CDATA[<blockquote><p>一般来说，现在的相机进行拍照都会带上相关的基本信息，包括拍照时间，大小等，前提是系统已经对相机等拍照软件进行了相关授权。我们可以使用通过下面的代码获取照片的相关信息。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        File jpegFile = <span class="keyword">new</span> File(<span class="string">&quot;E:\\20190425143833.jpg&quot;</span>);</span><br><span class="line">        Long fileTime = jpegFile.lastModified();</span><br><span class="line">        System.out.println(fileTime);</span><br><span class="line">        Metadata metadata;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            metadata = JpegMetadataReader.readMetadata(jpegFile);</span><br><span class="line">            Iterator&lt;Directory&gt; it = metadata.getDirectories().iterator();</span><br><span class="line">            <span class="keyword">while</span> (it.hasNext()) &#123;</span><br><span class="line">                Directory exif = it.next();</span><br><span class="line">                Iterator&lt;Tag&gt; tags = exif.getTags().iterator();</span><br><span class="line">                <span class="keyword">while</span> (tags.hasNext()) &#123;</span><br><span class="line">                    Tag tag = (Tag) tags.next();</span><br><span class="line">                    System.out.println(tag);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (JpegProcessingException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><blockquote><p> 注：如有需要，可自行转载，但是要加上原创作者及原文章链接哦…</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> 文件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>java 文件上传</title>
      <link href="2020/09/24/java%20%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/"/>
      <url>2020/09/24/java%20%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/</url>
      
        <content type="html"><![CDATA[<blockquote><p>文件上传在现在的功能需求中是很常见的，基本上所有的项目都会涉及到文件的上传，接下来就介绍文件处理当中的文件上传功能，仅仅是提供一个例子，希望对你们有所帮助</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> Object <span class="title">File</span><span class="params">(<span class="meta">@RequestParam(&quot;fileName&quot;)</span> MultipartFile file, HttpServletRequest request, HttpServletResponse response)</span> </span>&#123;</span><br><span class="line">        Files files = <span class="keyword">new</span> Files();</span><br><span class="line">        <span class="comment">// 获取原始文件名</span></span><br><span class="line">        String fileName = file.getOriginalFilename();</span><br><span class="line">        <span class="comment">//获取我们自己定义的文件名</span></span><br><span class="line">        String NewFileName = request.getParameter(<span class="string">&quot;NewFileName&quot;</span>);</span><br><span class="line">        <span class="comment">// 获取后缀</span></span><br><span class="line">        String suffixName = fileName.substring(fileName.lastIndexOf(<span class="string">&quot;.&quot;</span>));</span><br><span class="line">        <span class="comment">// 文件保存的路径</span></span><br><span class="line">        String filePath = <span class="string">&quot;F:/upload/&quot;</span>;</span><br><span class="line">        <span class="comment">// 对fileName处理，加上随机码，避免重复</span></span><br><span class="line"><span class="comment">//        String NewFileNames = filePath + UUID.randomUUID() + fileName;</span></span><br><span class="line"><span class="comment">//        String NewFileNames = filePath + UUID.randomUUID() + suffixName;</span></span><br><span class="line">        String NewFileNames = UUID.randomUUID() + <span class="string">&quot;-&quot;</span> + fileName;</span><br><span class="line">        <span class="comment">// 文件存储路径</span></span><br><span class="line">        File dest = <span class="keyword">new</span> File(filePath + NewFileNames);</span><br><span class="line">        <span class="comment">// 判断文件路径是否存在，不存在就创建路径</span></span><br><span class="line">        <span class="keyword">if</span> (!dest.getParentFile().exists()) &#123;</span><br><span class="line">            dest.getParentFile().mkdir();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            file.transferTo(dest);</span><br><span class="line">            response.sendRedirect(<span class="string">&quot;http://127.0.0.1:8080/html/file/files.html&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;上传失败，请返回页面重新上传！&quot;</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><blockquote><p> 注：如有需要，可自行转载，但是要加上原创作者及原文章链接哦…</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> 文件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>java 文件复制</title>
      <link href="2020/09/24/java%20%E6%96%87%E4%BB%B6%E5%A4%8D%E5%88%B6/"/>
      <url>2020/09/24/java%20%E6%96%87%E4%BB%B6%E5%A4%8D%E5%88%B6/</url>
      
        <content type="html"><![CDATA[<blockquote><p>在现在的功能需求中，文件的处理基本上都是会涉及到的，应该说是一个很常用的功能，接下来就介绍文件处理当中的文件复制功能，很少的代码实现常用的功能。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        String url = <span class="string">&quot;test.txt&quot;</span>;</span><br><span class="line">        String suffixName = url.substring(url.lastIndexOf(<span class="string">&quot;.&quot;</span>));</span><br><span class="line">        <span class="comment">//获取要复制的文件路径</span></span><br><span class="line">        FileInputStream fileInputStream = <span class="keyword">new</span> FileInputStream(<span class="string">&quot;F:\\&quot;</span> + url);</span><br><span class="line">        String filePath = <span class="string">&quot;F:\\test\\&quot;</span>;</span><br><span class="line">        File dest = <span class="keyword">new</span> File(filePath+System.currentTimeMillis());</span><br><span class="line">        <span class="comment">// 判断文件路径是否存在，不存在就创建路径</span></span><br><span class="line">        <span class="keyword">if</span> (!dest.getParentFile().exists()) &#123;</span><br><span class="line">            dest.getParentFile().mkdir();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//获取要写入的文件路径</span></span><br><span class="line">        FileOutputStream fileOutputStream = <span class="keyword">new</span> FileOutputStream(dest + suffixName);</span><br><span class="line">        <span class="comment">//获取要复制的的文件通道</span></span><br><span class="line">        FileChannel fileChannelInput = fileInputStream.getChannel();</span><br><span class="line">        <span class="comment">//获取要写入的文件通道</span></span><br><span class="line">        FileChannel fileChannelOutput = fileOutputStream.getChannel();</span><br><span class="line">        <span class="comment">// 将要复制文件通道的数据，写入到要写入的文件通道</span></span><br><span class="line">        fileChannelInput.transferTo(<span class="number">0</span>, fileChannelInput.size(), fileChannelOutput);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (fileInputStream != <span class="keyword">null</span>)&#123;</span><br><span class="line">                fileInputStream.close();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (fileChannelInput != <span class="keyword">null</span>) &#123;</span><br><span class="line">                fileChannelInput.close();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (fileOutputStream != <span class="keyword">null</span>) &#123;</span><br><span class="line">                fileOutputStream.close();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (fileChannelOutput != <span class="keyword">null</span>) &#123;</span><br><span class="line">                fileChannelOutput.close();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><blockquote><p>注：如有需要，可自行转载，但是要加上原创作者及原文章链接哦…</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> 文件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>jdk下载及环境变量配置</title>
      <link href="2020/09/24/jdk%E4%B8%8B%E8%BD%BD%E5%8F%8A%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F%E9%85%8D%E7%BD%AE/"/>
      <url>2020/09/24/jdk%E4%B8%8B%E8%BD%BD%E5%8F%8A%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<p><strong>一、jdk的下载</strong><br>1、jdk下载地址：<a href="http://www.oracle.com/technetwork/java/javase/downloads/index.html">http://www.oracle.com/technetwork/java/javase/downloads/index.html</a><br><a href="http://www.oracle.com/technetwork/java/javase/downloads/index.html">点击打开链接</a>  我们根据自己的需要选择相应版本的jdk进行下载。</p><p>下载好以后我们找到安装包进行安装，安装路径课根据自己的喜好进行调整，注意，安装的时候会依次出现两次安装，第一次是jdk的安装，第二次是jre的安装，建议两个不要放在同一个目录下。（安装很简单，就不截图啦！）</p><p><strong>二、在安装好以后，接下来就该配置环境变量了。</strong></p><p>1、右键点击计算机→属性→高级系统设置→高级→环境变量</p><p><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200919155814839.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3d6cDEyMzIx,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述">注：一般java_home、classpath、path都配置在系统变量中。</p><p>2、配置JAVA_HOME变量</p><p>系统变量→新建 JAVA_HOME 变量 。变量值填写jdk的安装目录（我是配置到用户变量中的，建议配置到系统变量中）</p><p><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/2020091915584747.png#pic_center" alt="在这里插入图片描述"><br>3、配置path变量</p><p>系统变量→寻找 Path 变量→编辑</p><p>在变量值最后输入 %JAVA_HOME%\bin;%JAVA_HOME%\jre\bin;  注意原来Path的变量值末尾有没有;号，如果没有，先输入；号再输入上面的变量代码。（注意：英文字符下的;号）</p><p><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200919155906499.png#pic_center" alt="在这里插入图片描述"><br>4、配置CLASSPATH 变量</p><p>系统变量→新建 CLASSPATH 变量</p><p>变量值填写   .;%JAVA_HOME%\lib;%JAVA_HOME%\lib\tools.jar（注意最前面有一个点）</p><p><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200919155945413.png#pic_center" alt="在这里插入图片描述"><br>5、jdk的环境变量配置完毕，接下来我们使用cmd命令窗口来检查是否成功。</p><p><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200919160008399.png#pic_center" alt="在这里插入图片描述"><br>如上图所示，输入 java -version （java 和 -version 之间有空格），当窗口中出现自己安装的jdk版本号则表示安装成功。当然，也可以通过输入Java 或者 javac 来进行检查。</p><p>5.1、命令窗口输入java  附图：</p><p><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200919160041990.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3d6cDEyMzIx,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>5.2、命令窗口输入javac  附图：</p><p><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200919160055754.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3d6cDEyMzIx,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>自此jdk的安装及检验就全部完成。</p>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> jdk </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="2020/09/23/hello-world/"/>
      <url>2020/09/23/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
